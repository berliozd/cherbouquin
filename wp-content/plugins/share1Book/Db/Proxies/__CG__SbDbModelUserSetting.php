<?php

namespace Proxies\__CG__\Sb\Db\Model;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class UserSetting extends \Sb\Db\Model\UserSetting implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getDisplayProfile()
    {
        $this->__load();
        return parent::getDisplayProfile();
    }

    public function setDisplayProfile($displayProfile)
    {
        $this->__load();
        return parent::setDisplayProfile($displayProfile);
    }

    public function getAllowFollowers()
    {
        $this->__load();
        return parent::getAllowFollowers();
    }

    public function setAllowFollowers($allowFollowers)
    {
        $this->__load();
        return parent::setAllowFollowers($allowFollowers);
    }

    public function getDisplayEmail()
    {
        $this->__load();
        return parent::getDisplayEmail();
    }

    public function setDisplayEmail($displayEmail)
    {
        $this->__load();
        return parent::setDisplayEmail($displayEmail);
    }

    public function getSendMessages()
    {
        $this->__load();
        return parent::getSendMessages();
    }

    public function setSendMessages($sendMessages)
    {
        $this->__load();
        return parent::setSendMessages($sendMessages);
    }

    public function getEmailMe()
    {
        $this->__load();
        return parent::getEmailMe();
    }

    public function setEmailMe($emailMe)
    {
        $this->__load();
        return parent::setEmailMe($emailMe);
    }

    public function getDataUser()
    {
        $this->__load();
        return parent::getDataUser();
    }

    public function setDataUser($dataUser)
    {
        $this->__load();
        return parent::setDataUser($dataUser);
    }

    public function getDisplayBirthday()
    {
        $this->__load();
        return parent::getDisplayBirthday();
    }

    public function setDisplayBirthday($displayBirthday)
    {
        $this->__load();
        return parent::setDisplayBirthday($displayBirthday);
    }

    public function getAccept_newsletter()
    {
        $this->__load();
        return parent::getAccept_newsletter();
    }

    public function setAccept_newsletter($accept_newsletter)
    {
        $this->__load();
        return parent::setAccept_newsletter($accept_newsletter);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function IsValid()
    {
        $this->__load();
        return parent::IsValid();
    }

    public function addUser($user)
    {
        $this->__load();
        return parent::addUser($user);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'display_profile', 'allow_followers', 'display_email', 'display_birthday', 'send_messages', 'email_me', 'data_user', 'accept_newsletter', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}